name: (Neo)vim
on:
  push:
    branches:
      - pre-release
  pull_request:
    branches:
      - master
jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Restore cache
      uses: actions/cache@v3.2.2
      with:
        path: '~/.cache/pip'
        key: ${{ runner.os }}-pip-${{ hashFiles('.vintrc.yml') }}
        restore-keys: ${{ runner.os }}-pip-
    - name: Install
      run: |
        pip install --upgrade pip
        pip install vim-vint
    - name: Lint
      run: vint autoload plugin -wt
  build:
    needs: lint
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        vim-version: [7.4.1689, 8.2.4049, 9.0.0304]
        python-version: ['2.7.18', '3.5', '3.6', '3.7', '3.8', '3.9', '3.10']
    env:
      LOG: python-${{ matrix.python-version }}-bench.log
    steps:
    - uses: actions/checkout@v3
    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install latest pip
      if: ${{ !(startsWith(matrix.python-version, '2.7') || startsWith(matrix.python-version, '3.5')) }}
      run: |
        pip install --upgrade pip

    - name: Install pip < 21.0
      if: ${{ (startsWith(matrix.python-version, '2.7') || startsWith(matrix.python-version, '3.5')) }}
      run: |
        pip install --upgrade 'pip < 21.0'

    - name: Restore pip cache
      uses: actions/cache@v3.2.2
      with:
        path: '~/.cache/pip'
        key: ${{ matrix.python-version }}-pip-${{ hashFiles('**/test/requirements.txt') }}
        restore-keys: ${{ matrix.python-version }}-pip-

    - name: Install python modules
      run: pip install -r test/requirements.txt

    - name: Set up plugin test environment
      uses: actions/checkout@v3
      with:
        repository: junegunn/vader.vim
        path: vader.vim
        fetch-depth: 1

    - name: Install neovim (current stable)
      if: ${{ contains(matrix.python-version, '3.7') || contains(matrix.python-version, '3.8') || contains(matrix.python-version, '3.9') || contains(matrix.python-version, '3.10') }}
      uses: rhysd/action-setup-vim@v1
      id: neovim-stable
      with:
        neovim: true
        version: stable

    - name: Install neovim
      uses: rhysd/action-setup-vim@v1
      id: neovim
      with:
        neovim: true
        version: 'v0.6.1'

    - name: Run python tests
      # > platform linux -- Python 3.7.3, pytest-6.2.2, py-1.10.0, pluggy-0.13.1 -- /usr/bin/python3
      # > ...
      # > /usr/lib/python3/dist-packages/socks.py:58: DeprecationWarning: Using or importing the ABCs from 'collections'
      # > instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
      # >   from collections import Callable
      run: pytest -v -W ignore::DeprecationWarning

    - name: Test plugin on vim
      if: ${{ startsWith(matrix.python-version, '2.7') }}
      run: |
        git clone --branch v${{ matrix.vim-version }} https://github.com/vim/vim.git vim-src
        cd vim-src
        ./configure --prefix=/usr/local --with-features=normal \
            --enable-pythoninterp=dynamic \
            --with-python-config-dir=$(find /opt/hostedtoolcache/Python/2.7.18 -name Makefile | xargs dirname)
        make && sudo make install && cd ..
        /usr/local/bin/vim --startuptime vim_bench.log -ENsu test/vimrc -c '+Vader! test/vader/pyx/*' > /dev/null
        .github/scripts/collect_start_times vim vim-${{ matrix.vim-version }}-$LOG

    - name: Test plugin on current stable neovim
      if: ${{ !(startsWith(matrix.python-version, '2.7') || startsWith(matrix.python-version, '3.5') || startsWith(matrix.python-version, '3.6')) }}
      run: |
        "${{ steps.neovim-stable.outputs.executable }}" --startuptime nvim_bench.log -ENsu test/vimrc -c '+Vader! test/vader/pyx/*' > /dev/null

    - name: Test plugin on neovim's legacy python providers
      if: ${{ (startsWith(matrix.python-version, '3.5') || startsWith(matrix.python-version, '3.6')) }}
      run: |
        "${{ steps.neovim.outputs.executable }}" --startuptime nvim_bench.log -ENsu test/vimrc -c '+Vader! test/vader/pyx/*' > /dev/null

    - name: Check startup times
      if: ${{ !startsWith(matrix.python-version, '2.7') }}
      run: |
        .github/scripts/collect_start_times nvim neovim-${{ matrix.nvim-version }}-$LOG

    - name: Save startup times
      uses: actions/upload-artifact@v3
      with:
        name: plugin-load-stats
        path: '**/*python*.log'
